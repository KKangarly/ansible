---
# new tasks :

- hosts: all
  become: true
  tasks:
    # add variables. Make sure these variables are easily accessed by your tasks . It should be "general playbook variables"
    # variables I need for this playbook : 
    # - docker container name
    # - docker container external port 
    # - docker container internal port (should be same with python http server port)
    # - python http server port (will be same with the punct before)

  - name: install nginx
    apt: 
      name: nginx
      state: present
    ignore_errors: true    

        
  - name: systemctl daemon reload
    ansible.builtin.systemd:
      daemon_reload: true
    ignore_errors: true    

    
  # Define a packages array on top of playbook. and make sure install each package using a loop
  - name: Install packets for Docker 
    apt:
      name:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common
        - python3-requests
        - python3-pip
        - virtualenv
        - python3-setuptools
      state: present
    ignore_errors: true

  - name: Add Docker GPG key
    apt_key:
      url: https://download.docker.com/linux/ubuntu/gpg # convert it to variable
      state: present
    ignore_errors: true

  - name: Add Docker repo
    apt_repository:
      repo: deb  https://download.docker.com/linux/ubuntu focal stable # convert it to variable
      state: present
    ignore_errors: true

  - name: Install Docker
    apt:
      name: docker-ce
      state: present
      update_cache: true
    ignore_errors: true

  - name: Start Docker service
    service:
      name: docker
      state: started
      enabled: yes
    ignore_errors: true

      # add copy taks to copy index.html to target servers 

      # add volume mode to container to use index.html that copied to targets 
  - name: run container 
    community.docker.docker_container:
      name: test
      image: python:3.9-slim
      state: started
      restart_policy: always # convert it to variable 
      command:  /bin/sh -c "mkdir -p /app && echo salam > /app/index.html && cd /app && python3 -m http.server 8000"
      ports:
        - "8000:8000"
    ignore_errors: true

  - name: changes nginx.config 
    copy:
      src: /tmp/nginx_salam.conf
      dest: /etc/nginx/sites-available/salam
      # ---- Convert these to variables 
      owner: root
      group: root
      mode: '0644'
      # ----------------
    ignore_errors: true

  - name: crated nginx conf link
    file:
      src: /etc/nginx/sites-available/salam
      dest: /etc/nginx/sites-enabled/salam
      state: link
      force: yes
    ignore_errors: true

  - name: delete default nginx conf link
    file:
      path: /etc/nginx/sites-enabled/default
      state: absent
    ignore_errors: true

  - name: reload nginx
    service:
      name: nginx
      state: reloaded
    ignore_errors: true

